#include <iostream>
#include <libusb-1.0/libusb.h>

int main() {
	libusb_device** devices;
	libusb_context* context = NULL;
	
	libusb_init(&context);

	size_t number_of_devices = libusb_get_device_list(context, &devices);
	if( number_of_devices < 1 ) {
		std::cerr << libusb_error_name( number_of_devices ) << std::endl;
		libusb_free_device_list(devices, 1);
		libusb_exit(context);
		return 1;
	}
	else {
		std::cout << "Found " << number_of_devices << std::endl;

	}

	for(size_t i=0;i<number_of_devices;++i) {
		auto dev = devices[i];
		libusb_device_descriptor dev_descriptor;
		libusb_get_device_descriptor(dev, &dev_descriptor);
		libusb_device_handle* dev_handle;

		libusb_open(dev, &dev_handle);

		auto manf_desc = dev_descriptor.iManufacturer;
		char* str_output;
		libusb_get_string_descriptor_ascii(dev_handle, manf_desc, str_output, 1024);
	}

	libusb_free_device_list(devices, 1);
	libusb_exit(context);

	return 0;
}
